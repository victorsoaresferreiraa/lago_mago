import os
import subprocess
import shutil

def check_java_version():
    try:
        output = subprocess.check_output(["java", "-version"], stderr=subprocess.STDOUT)
        output = output.decode()
        print("‚úÖ Java encontrado:")
        print(output.splitlines()[0])
        if "version \"11" in output:
            print("‚úîÔ∏è Java 11 est√° ativo.")
        else:
            print("‚ö†Ô∏è Java ativo n√£o √© a vers√£o 11. Verifique o JAVA_HOME.")
    except FileNotFoundError:
        print("‚ùå Java n√£o encontrado. Instale o Java 11 e configure o JAVA_HOME.")

def check_hadoop_home():
    hadoop_home = os.environ.get("HADOOP_HOME")
    if hadoop_home:
        print(f"‚úÖ HADOOP_HOME est√° definido: {hadoop_home}")
        winutils_path = os.path.join(hadoop_home, "bin", "winutils.exe")
        if os.path.isfile(winutils_path):
            print("‚úîÔ∏è winutils.exe encontrado.")
        else:
            print("‚ùå winutils.exe n√£o encontrado em HADOOP_HOME/bin.")
    else:
        print("‚ùå HADOOP_HOME n√£o est√° definido.")

def check_path_for_winutils():
    found = shutil.which("winutils.exe")
    if found:
        print(f"‚úÖ winutils.exe est√° no PATH: {found}")
    else:
        print("‚ùå winutils.exe n√£o est√° no PATH.")

print("üîç Verificando ambiente PySpark no Windows...\n")
check_java_version()
print()
check_hadoop_home()
print()
check_path_for_winutils()